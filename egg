repeat
    task.wait(1)
until game:IsLoaded()
task.wait(15)

local player = game.Players.LocalPlayer
local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
local TeleportService = game:GetService("TeleportService")
local props = game:GetService("ReplicatedStorage").props

local priorities = {
    "egg_legendary",
    "egg_rare",
    "egg_common"
}

function Check()
    for _, priority in ipairs(priorities) do
        for _, prop in pairs(props:GetChildren()) do
            if string.find(prop.Name, priority) then
                for _, obj in pairs(workspace:GetChildren()) do
                    if string.find(obj.Name, prop.Name) then
                        return true
                    end
                end
            end
        end
    end
    return false
end

function CollectEgg()
    if not game:IsLoaded() then game.Loaded:Wait() end
    for _, priority in ipairs(priorities) do
        for _, prop in pairs(props:GetChildren()) do
            if string.find(prop.Name, priority) then
                for _, obj in pairs(workspace:GetChildren()) do
                    if string.find(obj.Name, prop.Name) then
                        hrp.CFrame = obj:GetPivot()
                        task.wait(1.5)
                        for _, desc in pairs(obj:GetDescendants()) do
                            if desc:IsA("ProximityPrompt") then
                                fireproximityprompt(desc)
                                task.wait(1.5)
                            end
                        end
                    end
                end
            end
        end
    end

    queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/notanymore101010/sat/refs/heads/main/egg'))()")
    player:Kick("\nRejoining..")
    TeleportService:Teleport(game.PlaceId, player)
end

repeat
    CollectEgg()
    task.wait(1)
until not Check()
